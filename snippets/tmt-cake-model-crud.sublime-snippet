<snippet>
	<content><![CDATA[
App::uses('${1:PackageName}AppModel', '${1:PackageName}.Model');
class ${2:ModelName} extends ArticlesAppModel {

    public \$actsAs = array(
        'TomatoCms.Trackable' => array(
            'priority' => 1,
            'fields' => array(
                'created_by' => 'created_by_id',
                'updated_by' => 'updated_by_id'
            )
        ),
        'TomatoCms.Ordered' => array(
            'priority'    => 2,
            'field'       => 'weight',
            'foreign_key' => false
        ),
        'TomatoCms.UploadValidator' => array(
            'priority'  => 3,
            'fileField' => array('image_path')
        ),
        'TomatoCms.SThreeUpload'  => array(
            'priority'            => 4,
            'fileField'           => array('image_path'),
            'deleteAfterUpdate'   => false
        )
    );

	public \$validate = array(
        'field1' => array(
			"notBlank"  => array(
				"rule"          => "notBlank",
				"message"       => "This is required",
			)
		)
    );

    public function __construct(\$id = false, \$table = null, \$ds = null) {
        \$this->actsAs['TomatoCms.SThreeUpload']['s3BucketName']      = Configure::read('TomatoCms.S3BucketName');
        \$this->actsAs['TomatoCms.SThreeUpload']['s3AccessKeyId']     = Configure::read('TomatoCms.S3AccessKeyId');
        \$this->actsAs['TomatoCms.SThreeUpload']['s3SecretAccessKey'] = Configure::read('TomatoCms.S3SecretAccessKey');
        \$this->actsAs['TomatoCms.SThreeUpload']['s3Endpoint']        = Configure::read('TomatoCms.S3Endpoint');
        \$this->actsAs['TomatoCms.SThreeUpload']['s3Location']        = Configure::read('TomatoCms.S3PrefixLocation') . '/folder/';

        parent::__construct(\$id, \$table, \$ds);
    }

    public function onEditBeforeFindCallback(){
        \$this->bindModel(array(
            'belongsTo' => array(
                'CreatedBy' => array(
                    'className' => 'User'
                ),
                'UpdatedBy' => array(
                    'className' => 'User'
                ),
                'ActivatedBy' => array(
                    'className' => 'User',
                    'foreignKey' => 'enabled_by_id'
                )
            )
        ));
    }

    public function onIndexBeforePaginateCallback(){
        return true;
    }

    
}
?>
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>tmt-model-crud</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php</scope>
</snippet>
